{"version":3,"sources":["components/common/Responsive.js","lib/styles/palette.js","components/common/Button.js","components/common/Header.js","lib/api/client.js","lib/api/auth.js","modules/loading.js","lib/createRequestSaga.js","modules/user.js","containers/common/HeaderContainer.js","components/common/SubInfo.js","components/common/Tags.js","components/posts/PostList.js","modules/posts.js","lib/api/posts.js","containers/posts/PostListContainer.js","components/posts/Pagination.js","containers/posts/PaginationContainer.js","pages/PostListPage.js","components/auth/AuthTemplate.js","modules/auth.js","components/auth/AuthForm.js","containers/auth/LoginForm.js","pages/LoginPage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","components/write/Editor.js","modules/write.js","containers/write/EditorContainer.js","components/write/TagBox.js","containers/write/TagBoxContainer.js","components/write/WriteActionButtons.js","containers/write/WriteActionButtonsContainer.js","pages/WritePage.js","modules/post.js","components/post/PostViewer.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtons.js","containers/post/PostViewerContainer.js","pages/PostPage.js","App.js","modules/index.js","index.js"],"names":["ResponsiveBlock","styled","div","Responsive","children","rest","palette","gray","orange","buttonStyle","css","props","fullWidth","StyledButton","button","StyledLink","Link","Button","to","HeaderBlock","Wrapper","Spacer","UserInfo","Header","user","onLogout","className","username","onClick","client","axios","create","logout","post","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","action","payload","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","meta","error","logoutSaga","userSaga","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","takeLatest","checkError","HeaderContainer","useSelector","dispatch","useDispatch","SubInfoBlock","hasMarginTop","SubInfo","publishedDate","Date","toLocaleDateString","TagsBlock","Tags","tags","map","tag","PostListBlock","WritePostButtonWrapper","PostItemBlock","PostItem","title","body","_id","PostList","posts","showWriteButton","postsSaga","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","page","listPostsSaga","queryString","qs","stringify","lastPage","parseInt","headers","withRouter","location","match","React","params","parse","search","ignoreQueryPrefix","PaginationBlock","PageNumber","buildLink","query","Pagination","disabled","undefined","PostListPage","AuthTemplateBlock","WhiteBox","AuthTemplate","authSaga","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","initializeForm","register","password","login","registerSaga","loginSaga","initialState","passwordConfirm","auth","authError","produce","draft","AuthFormBlock","StyledInput","input","Footer","ButtonWithMarginTop","textMap","ErrorMessage","AuthForm","onChange","onSubmit","text","autoComplete","name","placeholder","history","setError","push","setItem","JSON","target","preventDefault","LoginPage","status","includes","RegisterPage","EditorBlock","TitleInput","QuillWrapper","Editor","onChangeField","quillElement","quillInstance","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","mounted","ref","writeSaga","INITIALIZE","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","SET_ORIGINAL_POST","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","initialize","writePost","setOriginalPost","updatePost","id","writePostSaga","updatePostSaga","patch","postError","originalPostId","write","EditorContainer","TagBoxBlock","TagForm","Tag","TagListBlock","TagItem","onRemove","TagList","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","nextTags","filter","t","trim","TagBoxContainer","WriteActionButtonBlock","WriteActionButtons","onCancel","onPublish","isEdit","goBack","WritePage","postSaga","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UNLOAD_POST","readPost","unloadPost","readPostSaga","PostViewerBlock","PostHead","PostContent","PostViewer","actionButtons","dangerouslySetInnerHTML","__html","Fullscreen","AskModalBlock","AskModal","visible","description","confirmText","cancelText","onConfirm","AskRemoveModal","PostActionButtonBlock","ActionButton","PostActionButtons","onEdit","modal","setModal","postId","a","delete","ownPost","PostPage","App","component","path","exact","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01984d9d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResponsiveBlock = styled.div`\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n    width: 1024px;\r\n    margin: 0 auto;\r\n\r\n    @media(max-width: 1024px){\r\n        width: 768px;\r\n    }\r\n    @media(max-width: 768px){\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst Responsive = ({children, ...rest}) => {\r\n    return (\r\n        <ResponsiveBlock {...rest}>\r\n            {children}\r\n        </ResponsiveBlock>\r\n    );\r\n};\r\n\r\nexport default Responsive;\r\n","const palette = {\r\n    gray: [\r\n        \"#f8f9fa\",\r\n        \"#f1f3f5\",\r\n        \"#e9ecef\",\r\n        \"#dee2e6\",\r\n        \"#ced4da\",\r\n        \"#adb5bd\",\r\n        \"#868e96\",\r\n        \"#495057\",\r\n        \"#343a40\",\r\n        \"#212529\",\r\n    ],\r\n    orange: [\r\n        \"#fff4e6\",\r\n        \"#ffe8cc\",\r\n        \"#ffd8a8\",\r\n        \"#ffc078\",\r\n        \"#ffa94d\",\r\n        \"#ff922b\",\r\n        \"#fd7e14\",\r\n        \"#f76707\",\r\n        \"#e8590c\",\r\n        \"#d9480f\",\r\n    ]\r\n}\r\n\r\nexport default palette;","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst buttonStyle = css`\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    padding: 0.25rem 1rem;\r\n    color: #fff;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    background: ${palette.gray[8]};\r\n    &:hover{\r\n        background: ${palette.gray[6]};\r\n    }\r\n\r\n    ${props =>\r\n    props.fullWidth &&\r\n    css`\r\n        padding-top: 0.75rem;\r\n        padding-bottom: 0.75rem;\r\n        width: 100%;\r\n        font-size: 1.125rem;\r\n    `}\r\n    \r\n    ${props =>\r\n    props.orange && \r\n    css`\r\n        background: ${palette.orange[5]};\r\n        &:hover{\r\n            background: ${palette.orange[4]};\r\n        }\r\n    `}\r\n    &:disabled{\r\n        background: ${palette.gray[3]};\r\n        color: ${palette.gray[5]};\r\n        cursor: not-allowed;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst Button = props => {\r\n    return props.to ? (\r\n        <StyledLink {...props} orange={props.orange ? 1 : 0} />\r\n    ) : (\r\n        <StyledButton {...props} />\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\nimport Button from './Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeaderBlock = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    background: #fff;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\nconst Wrapper = styled(Responsive)`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .logo{\r\n        font-size: 1.125rem;\r\n        font-weight: 800;\r\n        letter-spacing: 2px;\r\n    }\r\n    .right{\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n    height: 4rem;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n    font-weight: 800;\r\n    margin-right: 1rem;\r\n`;\r\n\r\nconst Header = ({user, onLogout}) => {\r\n    return (\r\n        <>\r\n            <HeaderBlock>\r\n                <Wrapper>\r\n                    <Link to=\"/\" className=\"logo\">\r\n                        Pilog\r\n                    </Link>\r\n                    {user ? (\r\n                        <div className=\"right\">\r\n                            <UserInfo>{user.username}</UserInfo>\r\n                            <Button onClick={onLogout}>로그아웃</Button>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"right\">\r\n                            <Button to=\"/login\">로그인</Button>\r\n                        </div>\r\n                    )}\r\n                </Wrapper>\r\n            </HeaderBlock>\r\n            <Spacer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;","import client from \"./client\";\r\n\r\n//로그인\r\nexport const login = ({username, password}) =>\r\n    client.post('/api/auth/login', {username, password});\r\n\r\n//회원가입\r\nexport const register = ({username, password}) =>\r\n    client.post('/api/auth/register', {username, password});\r\n\r\n//로그인 상태 확인\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\n//로그아웃\r\nexport const logout = () => client.post('/api/auth/logout');","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n    START_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n    FINISH_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n    {\r\n        [START_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: true,\r\n        }),\r\n        [FINISH_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: false,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default loading;\r\n\r\n","import {call, put} from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../modules/loading';\r\n\r\nexport const createRequestActionTypes = type => {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request){\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n\r\n    return function*(action){\r\n        yield put(startLoading(type));\r\n        try{\r\n            const response = yield call(request, action.payload);\r\n            yield put({\r\n                type: SUCCESS,\r\n                payload: response.data,\r\n                meta: response,\r\n            });\r\n        } catch(e){\r\n            yield put({\r\n                type: FAILURE,\r\n                payload: e,\r\n                error: true,\r\n            });\r\n        }\r\n        yield put(finishLoading(type));\r\n    };\r\n}","import { createAction, handleActions } from \"redux-actions\";\r\nimport {takeLatest, call} from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport createRequestSaga, {createRequestActionTypes} from \"../lib/createRequestSaga\";\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n    'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga(){\r\n    try{\r\n        localStorage.removeItem('user');\r\n    }catch(e){\r\n        console.log('localStorage is not working');\r\n    }\r\n}\r\n\r\nfunction* logoutSaga(){\r\n    try{\r\n        yield call(authAPI.logout);\r\n        localStorage.removeItem('user');\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport function* userSaga(){\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n    yield takeLatest(LOGOUT, logoutSaga)\r\n}\r\n\r\nconst initialState = {\r\n    user: null,\r\n    checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [TEMP_SET_USER]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_SUCCESS]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n            checkError: null,\r\n        }),\r\n        [CHECK_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            user: null,\r\n            checkError: error,\r\n        }),\r\n        [LOGOUT]: state => ({\r\n            ...state,\r\n            user: null,\r\n        }),\r\n    },\r\n    initialState,\r\n);","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from '../../components/common/Header';\r\nimport { logout } from '../../modules/user';\r\n\r\nconst HeaderContainer = () => {\r\n    const {user} = useSelector(({user}) => ({user: user.user}));\r\n    const dispatch = useDispatch();\r\n    const onLogout = () => {\r\n        dispatch(logout());\r\n    };\r\n    return <Header user={user} onLogout={onLogout} />;\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst SubInfoBlock = styled.div`\r\n    ${props =>\r\n    props.hasMarginTop &&\r\n    css`\r\n        margin-top: 1rem;\r\n    `}\r\n    color: ${palette.gray[6]};\r\n    span + span::before{\r\n        color: ${palette.gray[4]};\r\n        padding: 0 0.25rem;\r\n        content: '\\\\B7';\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst SubInfo = ({username, publishedDate, hasMarginTop}) => {\r\n    return (\r\n        <SubInfoBlock hasMarginTop={hasMarginTop}>\r\n            <span>\r\n                <b>\r\n                    <Link to={`/@${username}`}>{username}</Link>\r\n                </b>\r\n            </span>\r\n            <span>{new Date(publishedDate).toLocaleDateString()}</span>\r\n        </SubInfoBlock>\r\n    );\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst TagsBlock = styled.div`\r\n    margin-top: 0.5rem;\r\n    .tag{\r\n        display: inline-block;\r\n        color: ${palette.orange[7]};\r\n        text-decoration: none;\r\n        margin-right: 0.5rem;\r\n        &:hover{\r\n            color: ${palette.orange[6]};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tags = ({tags}) => {\r\n    return (\r\n        <TagsBlock>\r\n            {tags.map(tag => (\r\n                <Link className=\"tag\" to={`/?tag=${tag}`} key={tag}>\r\n                    #{tag}\r\n                </Link>\r\n            ))}\r\n        </TagsBlock>\r\n    );\r\n};\r\n\r\nexport default Tags;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport Button from '../common/Button';\r\nimport palette from '../../lib/styles/palette';\r\nimport SubInfo from '../common/SubInfo';\r\nimport Tags from '../common/Tags';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostListBlock = styled(Responsive)`\r\n    margin-top: 3rem;\r\n`;\r\n\r\nconst WritePostButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst PostItemBlock = styled.div`\r\n    padding-top: 3rem;\r\n    padding-bottom: 3rem;\r\n    &:first-child{\r\n        padding-top: 0;\r\n    }\r\n    & + &{\r\n        border-top: 1px solid ${palette.gray[2]};\r\n    }\r\n\r\n    h2{\r\n        font-size: 2rem;\r\n        margin-bottom: 0;\r\n        margin-top: 0;\r\n        &:hover{\r\n            color: ${palette.gray[6]};\r\n        }\r\n    }\r\n    p{\r\n        margin-top: 2rem;\r\n    }\r\n`;\r\n\r\nconst PostItem = ({post}) => {\r\n    const {publishedDate, user, tags, title, body, _id} = post;\r\n    return(\r\n        <PostItemBlock>\r\n            <h2>\r\n                <Link to={`/@${user.username}/${_id}`}>{title}</Link>\r\n            </h2>\r\n            <SubInfo\r\n                username={user.username}\r\n                publishedDate={new Date(publishedDate)}\r\n            />\r\n            <Tags tags={tags} />\r\n            <p>{body}</p>\r\n        </PostItemBlock>\r\n    );\r\n};\r\n\r\nconst PostList = ({posts, loading, error, showWriteButton}) => {\r\n    if(error){\r\n        return <PostListBlock>에러가 발생했습니다.</PostListBlock>\r\n    }\r\n\r\n    return (\r\n        <PostListBlock>\r\n            <WritePostButtonWrapper>\r\n                {showWriteButton && (\r\n                    <Button orange to=\"/write\">\r\n                        새 글 작성하기\r\n                    </Button>\r\n                )}\r\n            </WritePostButtonWrapper>\r\n            {!loading && posts && (\r\n                <div>\r\n                    {posts.map(post => (\r\n                        <PostItem post={post} key={post._id} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </PostListBlock>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport createRequestSaga, {createRequestActionTypes} from \"../lib/createRequestSaga\";\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst [\r\n    LIST_POSTS,\r\n    LIST_POSTS_SUCCESS,\r\n    LIST_POSTS_FAILURE,\r\n] = createRequestActionTypes('posts/LIST_POSTS');\r\n\r\nexport const listPosts = createAction(\r\n    LIST_POSTS,\r\n    ({tag, username, page}) => ({tag, username, page}),\r\n);\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\r\nexport function* postsSaga(){\r\n    yield takeLatest(LIST_POSTS, listPostsSaga);\r\n}\r\n\r\nconst initialState = {\r\n    posts: null,\r\n    error: null,\r\n    lastPage: 1,\r\n};\r\n\r\nconst posts = handleActions(\r\n    {\r\n        [LIST_POSTS_SUCCESS]: (state, {payload: posts, meta: response}) => ({\r\n            ...state,\r\n            posts,\r\n            lastPage: parseInt(response.headers['last-page'], 5),\r\n        }),\r\n        [LIST_POSTS_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            error,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default posts;","import qs from \"qs\";\r\nimport client from \"./client\";\r\n\r\nexport const writePost = ({title, body, tags}) =>\r\n    client.post('/api/posts', {title, body, tags});\r\n\r\nexport const readPost = id => client.get(`/api/posts/${id}`);\r\n\r\nexport const listPosts = ({page, username, tag}) => {\r\n    const queryString = qs.stringify({\r\n        page,\r\n        username,\r\n        tag,\r\n    });\r\n    return client.get(`/api/posts?${queryString}`);\r\n};\r\n\r\nexport const updatePost = ({id, title, body, tags}) =>\r\n    client.patch(`/api/posts/${id}`, {\r\n        title,\r\n        body,\r\n        tags,\r\n    });\r\n\r\nexport const removePost = id => client.delete(`/api/posts/${id}`);","import * as React from 'react';\r\nimport qs from 'qs';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostList from '../../components/posts/PostList';\r\nimport { listPosts } from '../../modules/posts';\r\n\r\nconst PostListContainer = ({location, match}) => {\r\n    const dispatch = useDispatch();\r\n    const {posts, error, loading, user} = useSelector(\r\n        ({posts, loading, user}) => ({\r\n            posts: posts.posts,\r\n            error: posts.error,\r\n            loading: loading['posts/LIST_POSTS'],\r\n            user: user.user,\r\n        }),\r\n    );\r\n    React.useEffect(() => {\r\n        const {username} = match.params;\r\n        const {tag, page} = qs.parse(location.search, {\r\n            ignoreQueryPrefix: true,\r\n        });\r\n        dispatch(listPosts({tag, username, page}));\r\n    }, [dispatch, location.search, match.params]);\r\n    return (\r\n        <PostList\r\n            loading={loading}\r\n            error={error}\r\n            posts={posts}\r\n            showWriteButton={user}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(PostListContainer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport qs from 'qs';\r\nimport Button from '../common/Button';\r\n\r\nconst PaginationBlock = styled.div`\r\n    width: 320px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 3rem;\r\n`;\r\nconst PageNumber = styled.div``;\r\n\r\nconst buildLink = ({username, tag, page}) => {\r\n    const query = qs.stringify({tag, page});\r\n    return username ? `/@${username}?${query}` : `/?${query}`;\r\n};\r\n\r\nconst Pagination = ({page, lastPage, username, tag}) => {\r\n    return (\r\n        <PaginationBlock>\r\n            <Button\r\n                disabled={page === 1}\r\n                to={\r\n                    page === 1 ? undefined : buildLink({username, tag, page: page - 1})\r\n                }\r\n            >\r\n                이전\r\n            </Button>\r\n            <PageNumber>{page}</PageNumber>\r\n            <Button\r\n                disabled={page === lastPage}\r\n                to={\r\n                    page === lastPage ? undefined : buildLink({username, tag, page: page + 1})\r\n                }\r\n            >\r\n                다음\r\n            </Button>\r\n        </PaginationBlock>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport Pagination from '../../components/posts/Pagination';\r\nimport { useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n\r\nconst PaginationContainer = ({location, match}) => {\r\n    const {lastPage, posts, loading} = useSelector(({posts, loading}) => ({\r\n        lastPage: posts.lastPage,\r\n        posts: posts.posts,\r\n        loading: loading['posts/LIST_POSTS'],\r\n    }));\r\n\r\n    if(!posts || loading) return null;\r\n\r\n    const {username} = match.params;\r\n\r\n    const {tag, page = 1} = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true,\r\n    });\r\n\r\n    return (\r\n        <Pagination\r\n            tag={tag}\r\n            username={username}\r\n            page={parseInt(page, 5)}\r\n            lastPage={lastPage}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../containers/common/HeaderContainer';\r\nimport PostListContainer from '../containers/posts/PostListContainer';\r\nimport PaginationContainer from '../containers/posts/PaginationContainer';\r\n\r\nconst PostListPage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer />\r\n            <PostListContainer />\r\n            <PaginationContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostListPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: ${palette.gray[2]};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n    .logo-area{\r\n        display: block;\r\n        padding-bottom: 2rem;\r\n        text-align: center;\r\n        font-weight: 700;\r\n        letter-spacing: 2px;\r\n    }\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n    padding: 2rem;\r\n    width: 360px;\r\n    background: #fff;\r\n    border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({children}) => {\r\n    return (\r\n        <AuthTemplateBlock>\r\n            <WhiteBox>\r\n                <div className=\"logo-area\">\r\n                    <Link to=\"/\">Pildrum</Link>\r\n                </div>\r\n                {children}\r\n            </WhiteBox>\r\n        </AuthTemplateBlock>\r\n    );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport produce from 'immer';\r\nimport {takeLatest} from 'redux-saga/effects'\r\nimport createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n    'auth/REGISTER',\r\n);\r\n\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n    'auth/LOGIN',\r\n);\r\n\r\nexport const changeField = createAction(\r\n    CHANGE_FIELD,\r\n    ({form, key, value}) => ({\r\n        form,\r\n        key,\r\n        value,\r\n    }),\r\n);\r\n\r\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\r\nexport const register = createAction(REGISTER, ({username, password}) => ({\r\n    username,\r\n    password,\r\n}));\r\nexport const login = createAction(LOGIN, ({username, password}) => ({\r\n    username,\r\n    password,\r\n}));\r\n\r\n//사가 생성\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nexport function* authSaga(){\r\n    yield takeLatest(REGISTER, registerSaga);\r\n    yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n    register: {\r\n        username: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n    },\r\n    login: {\r\n        username: '',\r\n        password: '',\r\n    },\r\n    auth: null,\r\n    authError: null,\r\n};\r\n\r\nconst auth = handleActions(\r\n    {\r\n        [CHANGE_FIELD]: (state, {payload: {form, key, value}}) => \r\n            produce(state, draft => {\r\n                draft[form][key] = value;\r\n            }),\r\n        [INITIALIZE_FORM]: (state, {payload: form}) => ({\r\n            ...state,\r\n            [form]: initialState[form],\r\n            authError: null,\r\n        }),\r\n        [REGISTER_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            authError: null,\r\n            auth,\r\n        }),\r\n        [REGISTER_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n        [LOGIN_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            authError: null,\r\n            auth,\r\n        }),\r\n        [LOGIN_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default auth;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from '../common/Button';\r\n\r\nconst AuthFormBlock = styled.div`\r\n    h3{\r\n        margin: 0;\r\n        color: ${palette.gray[5]};\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    font-size: 1rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[5]};\r\n    padding-bottom: 0.5rem;\r\n    outline: none;\r\n    width: 100%;\r\n    &:focus{\r\n        color: $oc-teal-7;\r\n        border-bottom: 1px solid ${palette.gray[7]};\r\n    }\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n    margin-top: 2rem;\r\n    text-align: right;\r\n    a{\r\n        color: ${palette.gray[6]};\r\n        text-decoration: underline;\r\n        &:hover{\r\n            color: ${palette.gray[9]};\r\n        }\r\n    }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n    margin-top: 1rem;\r\n`;\r\n\r\n\r\nconst textMap = {\r\n    login: '로그인',\r\n    register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: #f00;\r\n    text-align: center;\r\n    font-size: 0.875rem;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({type, form, onChange, onSubmit, error}) => {\r\n    const text = textMap[type];\r\n    return (\r\n        <AuthFormBlock>\r\n            <h3>{text}</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <StyledInput\r\n                    autoComplete=\"username\"\r\n                    name=\"username\"\r\n                    placeholder=\"아이디\"\r\n                    onChange={onChange}\r\n                    value={form.username}\r\n                />\r\n                <StyledInput\r\n                    autoComplete=\"new-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"비밀번호\"\r\n                    type=\"password\"\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                />\r\n                {type === 'register' && (\r\n                    <StyledInput\r\n                        autoComplete=\"new-password\"\r\n                        name=\"passwordConfirm\"\r\n                        placeholder=\"비밀번호 확인\"\r\n                        type=\"password\"\r\n                        onChange={onChange}\r\n                        value={form.passwordConfirm}\r\n                    />\r\n                )}\r\n                {error && <ErrorMessage>{error}</ErrorMessage>}\r\n                <ButtonWithMarginTop orange fullWidth>\r\n                    {text}\r\n                </ButtonWithMarginTop>\r\n            </form>\r\n            <Footer>\r\n                {type === 'login' ? (\r\n                    <Link to=\"/register\">회원가입</Link>\r\n                ) : (\r\n                    <Link to=\"/login\">로그인</Link>\r\n                )}\r\n            </Footer>\r\n        </AuthFormBlock>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import * as React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { changeField, initializeForm, login } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport {check} from '../../modules/user';\r\n\r\nconst LoginForm = ({history}) => {\r\n    const [error, setError] = React.useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.login,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user\r\n    }));\r\n\r\n    //인풋 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {value, name} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'login',\r\n                key: name,\r\n                value\r\n            })\r\n        );\r\n    };\r\n\r\n    //폼 등록 이벤트 핸들러\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const {username, password} = form;\r\n        dispatch(login({username, password}));\r\n    };\r\n\r\n    //컴포넌트가 처음 렌더링될 때 form을 초기화함\r\n    React.useEffect(() => {\r\n        dispatch(initializeForm('login'));\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        if(authError){\r\n            console.log('오류 발생');\r\n            console.log(authError);\r\n            setError('로그인 실패');\r\n            return;\r\n        }\r\n        if(auth){\r\n            console.log('로그인 성공');\r\n            dispatch(check());\r\n        }\r\n    }, [auth, authError, dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        if(user){\r\n            history.push('/');\r\n            try{\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            }catch(e){\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type=\"login\"\r\n            form={form}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n            error={error}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport LoginForm from '../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <LoginForm />\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import * as React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, register } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { check } from '../../modules/user';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst RegisterForm = ({history}) => {\r\n    const [error, setError] = React.useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.register,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user\r\n    }));\r\n\r\n    //인풋 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {value, name} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'register',\r\n                key: name,\r\n                value\r\n            })\r\n        );\r\n    };\r\n\r\n    //폼 등록 이벤트 핸들러\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const {username, password, passwordConfirm} = form;\r\n        if(password !== passwordConfirm){\r\n            const {username, password, passwordConfirm} = form;\r\n            if([username, password, passwordConfirm].includes('')){\r\n                setError('빈 칸을 모두 입력하세요.');\r\n                return;\r\n            }\r\n            if(password !== passwordConfirm){\r\n                setError('비밀번호가 일치하지 않습니다.');\r\n                dispatch(changeField({form: 'register', key: 'password', value: ''}));\r\n                dispatch(changeField({form: 'register', key: 'passwordConfirm', value: ''}));\r\n            }\r\n            return;\r\n        }\r\n        dispatch(register({username, password}));\r\n    };\r\n\r\n    //컴포넌트가 처음 렌더링될 때 form을 초기화함\r\n    React.useEffect(() => {\r\n        dispatch(initializeForm('register'));\r\n    }, [dispatch]);\r\n\r\n    //회원가입 성공/실패 처리\r\n    React.useEffect(() => {\r\n        if(authError){\r\n            if(authError.response.status === 409){\r\n                setError('이미 존재하는 계정명입니다.');\r\n                return;\r\n            }\r\n            setError('회원가입 실패')\r\n            return;\r\n        }\r\n        if(auth){\r\n            console.log('회원가입 성공');\r\n            console.log(auth);\r\n            dispatch(check());\r\n        }\r\n    }, [auth, authError, dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        if(user){\r\n            history.push('/');\r\n            try{\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            }catch(e){\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type=\"register\"\r\n            form={form}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n            error={error}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport RegisterForm from '../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <RegisterForm />\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import * as React from 'react';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n    padding-top: 5rem;\r\n    padding-bottom: 5rem;\r\n`;\r\nconst TitleInput = styled.input`\r\n    font-size: 3rem;\r\n    outline: none;\r\n    padding-bottom: 0.5rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[4]};\r\n    margin-bottom: 2rem;\r\n    width: 100%;\r\n`;\r\nconst QuillWrapper = styled.div`\r\n    .ql-editor{\r\n        padding: 0;\r\n        min-height: 320px;\r\n        font-size: 1.125rem;\r\n        line-height: 1.5;\r\n    }\r\n    .ql-editor .ql-blank::before{\r\n        left: 0;\r\n    }\r\n`;\r\n\r\nconst Editor = ({title, body, onChangeField}) => {\r\n    const quillElement = React.useRef(null);\r\n    const quillInstance = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        quillInstance.current = new Quill(quillElement.current, {\r\n            theme: 'bubble',\r\n            placeholder: '내용을 작성하세요...',\r\n            modules: {\r\n                toolbar: [\r\n                    [{header: '1'}, {header: '2'}],\r\n                    ['bold', 'italic', 'underline', 'strike'],\r\n                    [{list: 'ordered'}, {list:'bullet'}],\r\n                    ['blockquote', 'code-block', 'link', 'image'],\r\n                ],\r\n            },\r\n        });\r\n        const quill = quillInstance.current;\r\n        quill.on('text-change', (delta, oldDelta, source) => {\r\n            if(source === 'user'){\r\n                onChangeField({key: 'body', value: quill.root.innerHTML});\r\n            }\r\n        });\r\n    }, [onChangeField]);\r\n\r\n    const mounted = React.useRef(false);\r\n    React.useEffect(() => {\r\n        if (mounted.current) return;\r\n        mounted.current = true;\r\n        quillInstance.current.root.innerHTML = body;\r\n    }, [body])\r\n\r\n    const onChangeTitle = e => {\r\n        onChangeField({key: 'title', value: e.target.value});\r\n    };\r\n\r\n    return (\r\n        <EditorBlock>\r\n            <TitleInput\r\n                placeholder=\"제목을 입력하세요\"\r\n                onChange={onChangeTitle}\r\n                value={title}\r\n            />\r\n            <QuillWrapper>\r\n                <div ref={quillElement} />\r\n            </QuillWrapper>\r\n        </EditorBlock>\r\n    );\r\n};\r\n\r\nexport default Editor;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport createRequestSaga, {createRequestActionTypes} from \"../lib/createRequestSaga\";\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst INITIALIZE = 'write/INITIALIZE';\r\nconst CHANGE_FIELD =  'write/CHANGE_FIELD';\r\nconst [\r\n    WRITE_POST,\r\n    WRITE_POST_SUCCESS,\r\n    WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('write/WRITE_POST');\r\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\r\nconst [\r\n    UPDATE_POST,\r\n    UPDATE_POST_SUCCESS,\r\n    UPDATE_POST_FAILURE,\r\n] = createRequestActionTypes('write/UPDATE_POST');\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({key, value}) => ({\r\n    key,\r\n    value,\r\n}));\r\nexport const writePost = createAction(WRITE_POST, ({title, body, tags}) => ({\r\n    title,\r\n    body,\r\n    tags,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\r\nexport const updatePost = createAction(\r\n    UPDATE_POST,\r\n    ({id, title, body, tags}) => ({\r\n        id,\r\n        title,\r\n        body,\r\n        tags,\r\n    }),\r\n);\r\n\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postsAPI.writePost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postsAPI.updatePost);\r\n\r\nexport function* writeSaga(){\r\n    yield takeLatest(WRITE_POST, writePostSaga);\r\n    yield takeLatest(UPDATE_POST, updatePostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    title: '',\r\n    body: '',\r\n    tags: [],\r\n    post: null,\r\n    postError: null,\r\n    originalPostId: null,\r\n};\r\n\r\nconst write = handleActions(\r\n    {\r\n        [INITIALIZE]: state => initialState,\r\n        [CHANGE_FIELD]: (state, {payload: {key, value}}) => ({\r\n            ...state,\r\n            [key]: value,\r\n        }),\r\n        [WRITE_POST]: state => ({\r\n            ...state,\r\n            post: null,\r\n            postError: null,\r\n        }),\r\n        [WRITE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post\r\n        }),\r\n        [WRITE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            postError,\r\n        }),\r\n        [SET_ORIGINAL_POST]: (state, {payload: post}) => ({\r\n            ...state,\r\n            title: post.title,\r\n            body: post.body,\r\n            tags: post.tags,\r\n            originalPostId: post._id,\r\n        }),\r\n        [UPDATE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post,\r\n        }),\r\n        [UPDATE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            postError,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default write;","import * as React from 'react';\r\nimport Editor from '../../components/write/Editor';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeField, initialize } from '../../modules/write';\r\n\r\nconst EditorContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {title, body} = useSelector(({write}) => ({\r\n        title: write.title,\r\n        body: write.body,\r\n    }));\r\n    const onChangeField = React.useCallback(payload => dispatch(changeField(payload)), [\r\n        dispatch,\r\n    ]);\r\n    React.useEffect(() => {\r\n        return () => {\r\n            dispatch(initialize());\r\n        };\r\n    }, [dispatch])\r\n    return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default EditorContainer;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst TagBoxBlock = styled.div`\r\n    width: 100%;\r\n    border-top: 1px solid ${palette.gray[2]};\r\n    padding-top: 2rem;\r\n\r\n    h4{\r\n        color: ${palette.gray[8]};\r\n        margin-top: 0;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    width: 256px;\r\n    border: 1px solid ${palette.gray[9]};\r\n    input,\r\n    button{\r\n        outline: none;\r\n        border: none;\r\n        font-size: 1rem;\r\n    }\r\n\r\n    input{\r\n        padding: 0.5rem;\r\n        flex: 1;\r\n        min-width: 0;\r\n    }\r\n    button{\r\n        cursor: pointer;\r\n        padding-right: 1rem;\r\n        padding-left: 1rem;\r\n        border: none;\r\n        background: ${palette.gray[8]};\r\n        color: #fff;\r\n        font-weight: 700;\r\n        &:hover{\r\n            background: ${palette.gray[6]};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n    margin-right: 0.5rem;\r\n    color: ${palette.gray[6]};\r\n    cursor: pointer;\r\n    &:hover{\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n    display: flex;\r\n    margin-top: 0.5rem;\r\n`;\r\n\r\nconst TagItem = React.memo(({tag, onRemove}) => (\r\n    <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n));\r\n\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n    <TagListBlock>\r\n        {tags.map(tag => (\r\n            <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n        ))}\r\n    </TagListBlock>\r\n));\r\n\r\nconst TagBox = ({tags, onChangeTags}) => {\r\n    const [input, setInput] = React.useState('');\r\n    const [localTags, setLocalTags] = React.useState([]);\r\n\r\n    const insertTag = React.useCallback(\r\n        tag => {\r\n            if(!tag) return;\r\n            if(localTags.includes(tag)) return;\r\n            const nextTags = [...localTags, tag];\r\n            setLocalTags(nextTags);\r\n            onChangeTags(nextTags);\r\n        },\r\n        [localTags, onChangeTags],\r\n    );\r\n\r\n    const onRemove = React.useCallback(\r\n        tag => {\r\n            const nextTags = localTags.filter(t => t !== tag);\r\n            setLocalTags(nextTags);\r\n            onChangeTags(nextTags);\r\n        },\r\n        [localTags, onChangeTags],\r\n    );\r\n\r\n    const onChange = React.useCallback(e => {\r\n        setInput(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = React.useCallback(\r\n        e => {\r\n            e.preventDefault();\r\n            insertTag(input.trim());\r\n            setInput('');\r\n        },\r\n        [input, insertTag],\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        setLocalTags(tags);\r\n    }, [tags]);\r\n\r\n    return (\r\n        <TagBoxBlock>\r\n            <h4>태그</h4>\r\n            <TagForm onSubmit={onSubmit}>\r\n                <input\r\n                    placeholder=\"태그를 입력하세요\"\r\n                    value={input}\r\n                    onChange={onChange}\r\n                />\r\n                <button type=\"submit\">추가</button>\r\n            </TagForm>\r\n            <TagList tags={localTags} onRemove={onRemove} />\r\n        </TagBoxBlock>\r\n    );\r\n};\r\n\r\nexport default TagBox;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TagBox from '../../components/write/TagBox';\r\nimport { changeField } from '../../modules/write';\r\n\r\nconst TagBoxContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const tags = useSelector(state => state.write.tags);\r\n\r\n    const onChangeTags = nextTags => {\r\n        dispatch(\r\n            changeField({\r\n                key: 'tags',\r\n                value: nextTags,\r\n            }),\r\n        );\r\n    };\r\n\r\n    return <TagBox onChangeTags={onChangeTags} tags={tags} />\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\n\r\nconst WriteActionButtonBlock = styled.div`\r\n    margin-top: 1rem;\r\n    margin-bottom: 3rem;\r\n    button + button{\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 2.125rem;\r\n    & + & {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst WriteActionButtons = ({onCancel, onPublish, isEdit}) => {\r\n    return (\r\n        <WriteActionButtonBlock>\r\n            <StyledButton orange onClick={onPublish}>\r\n                포스트 {isEdit ? '수정' : '등록'}\r\n            </StyledButton>\r\n            <StyledButton onClick={onCancel}>취소</StyledButton>\r\n        </WriteActionButtonBlock>\r\n    );\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import * as React from 'react';\r\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { writePost, updatePost } from '../../modules/write';\r\n\r\nconst WriteActionButtonsContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {title, body, tags, post, postError, originalPostId} = useSelector(({write}) => ({\r\n        title: write.title,\r\n        body: write.body,\r\n        tags: write.tags,\r\n        post: write.post,\r\n        postError: write.postError,\r\n        originalPostId: write.originalPostId,\r\n    }));\r\n\r\n    const onPublish = () => {\r\n        if(originalPostId){\r\n            dispatch(updatePost({title, body, tags, id: originalPostId}));\r\n            return;\r\n        }\r\n        dispatch(\r\n            writePost({\r\n                title,\r\n                body,\r\n                tags,\r\n            }),\r\n        );\r\n    };\r\n\r\n    const onCancel = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(post){\r\n            const {_id, user} = post;\r\n            history.push(`/@${user.username}/${_id}`);\r\n        }\r\n        if(postError){\r\n            console.log(postError);\r\n        }\r\n    }, [history, post, postError]);\r\n    return (\r\n        <WriteActionButtons\r\n            onPublish={onPublish}\r\n            onCancel={onCancel}\r\n            isEdit={!!originalPostId}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Responsive from '../components/common/Responsive';\r\nimport EditorContainer from '../containers/write/EditorContainer';\r\nimport TagBoxContainer from '../containers/write/TagBoxContainer';\r\nimport WriteActionButtonsContainer from '../containers/write/WriteActionButtonsContainer';\r\n\r\nconst WritePage = () => {\r\n    return (\r\n        <Responsive>\r\n            <Helmet>\r\n                <title>글 작성하기 - Pilog</title>\r\n            </Helmet>\r\n            <EditorContainer />\r\n            <TagBoxContainer />\r\n            <WriteActionButtonsContainer />\r\n        </Responsive>\r\n    );\r\n};\r\n\r\nexport default WritePage;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport createRequestSaga, {createRequestActionTypes} from \"../lib/createRequestSaga\";\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst [\r\n    READ_POST,\r\n    READ_POST_SUCCESS,\r\n    READ_POST_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST');\r\nconst UNLOAD_POST = 'post/UNLOAD_POST';\r\n\r\nexport const readPost = createAction(READ_POST, id => id);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\n\r\nconst readPostSaga = createRequestSaga(READ_POST, postsAPI.readPost);\r\nexport function* postSaga(){\r\n    yield takeLatest(READ_POST, readPostSaga)\r\n}\r\n\r\nconst initialState = {\r\n    post: null,\r\n    error: null,\r\n};\r\n\r\nconst post = handleActions(\r\n    {\r\n        [READ_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post,\r\n        }),\r\n        [READ_POST_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            error,\r\n        }),\r\n        [UNLOAD_POST]: () => initialState,\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default post;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\nimport SubInfo from '../common/SubInfo';\r\nimport Tags from '../common/Tags';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n    margin-top: 4rem;\r\n`;\r\nconst PostHead = styled.div`\r\n    border-bottom: 1px solid ${palette.gray[2]};\r\n    padding-bottom: 3rem;\r\n    margin-bottom: 3rem;\r\n    h1{\r\n        font-size: 3rem;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n    }\r\n`;\r\nconst PostContent = styled.div`\r\n    font-size: 1.3125rem;\r\n    color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PostViewer = ({post, error, loading, actionButtons}) => {\r\n    if(error){\r\n        if(error.response && error.response.status === 404){\r\n            return <PostViewerBlock>존재하지 않는 포스트입니다.</PostViewerBlock>;\r\n        }\r\n        return <PostViewerBlock>오류 발생!</PostViewerBlock>;\r\n    }\r\n    if(loading || !post){\r\n        return null;\r\n    }\r\n\r\n    const {title, body, user, publishedDate, tags} = post;\r\n    return (\r\n        <PostViewerBlock>\r\n            <Helmet>\r\n                <title>{title} - Pilog</title>\r\n            </Helmet>\r\n            <PostHead>\r\n                <h1>{title}</h1>\r\n                <SubInfo\r\n                    username={user.username}\r\n                    publishedDate={publishedDate}\r\n                    hasMarginTop\r\n                />\r\n                <Tags tags={tags} />\r\n            </PostHead>\r\n            {actionButtons}\r\n            <PostContent dangerouslySetInnerHTML={{__html: body}}/>\r\n        </PostViewerBlock>\r\n    );\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Fullscreen = styled.div`\r\n    position: fixed;\r\n    z-index: 30;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.25);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst AskModalBlock = styled.div`\r\n    width: 320px;\r\n    background: #fff;\r\n    padding: 1.5rem;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.125);\r\n    h2{\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n    }\r\n    p{\r\n        margin-bottom: 3rem;\r\n    }\r\n    .buttons{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 2rem;\r\n    & + &{\r\n        margin-left: 0.75rem;\r\n    }\r\n`;\r\n\r\nconst AskModal = ({\r\n    visible, \r\n    title, \r\n    description,\r\n    confirmText = '확인',\r\n    cancelText = '취소',\r\n    onConfirm,\r\n    onCancel,\r\n}) => {\r\n    if(!visible) return null;\r\n    return (\r\n        <Fullscreen>\r\n            <AskModalBlock>\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <div className=\"buttons\">\r\n                    <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n                    <StyledButton orange onClick={onConfirm}>\r\n                        {confirmText}\r\n                    </StyledButton>\r\n                </div>\r\n            </AskModalBlock>\r\n        </Fullscreen>\r\n    );\r\n};\r\n\r\nexport default AskModal;\r\n","import React from 'react';\r\nimport AskModal from '../common/AskModal';\r\n\r\nconst AskRemoveModal = ({visible, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title=\"포스트 삭제\"\r\n            description=\"포스트를 정말 삭제하시겠습니까?\"\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport AskRemoveModal from './AskRemoveModal';\r\n\r\nconst PostActionButtonBlock = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 2rem;\r\n    margin-top: -1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 4px;\r\n    color: ${palette.gray[6]};\r\n    font-weight: 700;\r\n    border: none;\r\n    outline: none;\r\n    font-size: .875rem;\r\n    cursor: pointer;\r\n    &:hover{\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.orange[7]};\r\n    }\r\n    & + &{\r\n        margin-left: .25rem;\r\n    }\r\n`;\r\n\r\nconst PostActionButtons = ({onEdit, onRemove}) => {\r\n    const [modal, setModal] = React.useState(false);\r\n    const onRemoveClick = () => {\r\n        setModal(true);\r\n    };\r\n    const onCancel = () => {\r\n        setModal(false);\r\n    };\r\n    const onConfirm = () => {\r\n        setModal(false);\r\n        onRemove();\r\n    };\r\n    return (\r\n        <>\r\n            <PostActionButtonBlock>\r\n                <ActionButton onClick={onEdit}>수정</ActionButton>\r\n                <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n            </PostActionButtonBlock>\r\n            <AskRemoveModal\r\n                visible={modal}\r\n                onConfirm={onConfirm}\r\n                onCancel={onCancel}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostActionButtons;\r\n","import * as React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { readPost, unloadPost } from '../../modules/post';\r\nimport PostViewer from '../../components/post/PostViewer';\r\nimport PostActionButtons from '../../components/post/PostActionButtons';\r\nimport { setOriginalPost } from '../../modules/write';\r\nimport { removePost } from '../../lib/api/posts';\r\n\r\nconst PostViewerContainer = ({match, history}) => {\r\n    const {postId} = match.params;\r\n    const dispatch = useDispatch();\r\n    const {post, error, loading, user} = useSelector(({post, loading, user}) => ({\r\n        post: post.post,\r\n        error: post.error,\r\n        loading: loading['post/READ_POST'],\r\n        user: user.user,\r\n    }));\r\n\r\n    React.useEffect(() => {\r\n        dispatch(readPost(postId));\r\n        return() => {\r\n            dispatch(unloadPost());\r\n        };\r\n    }, [dispatch, postId]);\r\n\r\n    const onEdit = () => {\r\n        dispatch(setOriginalPost(post));\r\n        history.push('/write');\r\n    };\r\n\r\n    const onRemove = async () => {\r\n        try{\r\n            await removePost(postId);\r\n            history.push('/');\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const ownPost = (user && user._id) === (post && post.user._id);\r\n\r\n    return(\r\n        <PostViewer\r\n            post={post}\r\n            loading={loading}\r\n            error={error}\r\n            actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove} />}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../containers/common/HeaderContainer';\r\nimport PostViewerContainer from '../containers/post/PostViewerContainer';\r\n\r\nconst PostPage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer />\r\n            <PostViewerContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport PostListPage from './pages/PostListPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport WritePage from './pages/WritePage';\r\nimport PostPage from './pages/PostPage';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>홈 - Pilog</title>\r\n      </Helmet>\r\n      <Route component={PostListPage} path={['/@:username', '/']} exact />\r\n      <Route component={LoginPage} path=\"/login\" />\r\n      <Route component={RegisterPage} path=\"/register\" />\r\n      <Route component={WritePage} path=\"/write\" />\r\n      <Route component={PostPage} path=\"/@:username/:postId\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {combineReducers} from 'redux';\r\nimport {all} from 'redux-saga/effects';\r\nimport auth, {authSaga} from './auth';\r\nimport loading from './loading';\r\nimport user, {userSaga} from './user';\r\nimport write, {writeSaga} from './write';\r\nimport post, {postSaga} from './post';\r\nimport posts, {postsSaga} from './posts';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth,\r\n    loading,\r\n    user,\r\n    write,\r\n    post,\r\n    posts,\r\n});\r\n\r\nexport function* rootSaga(){\r\n    yield all([authSaga(), userSaga(), writeSaga(), postSaga(), postsSaga()]);\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer, {rootSaga} from './modules';\r\nimport { tempSetUser, check } from './modules/user';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nfunction loadUser(){\r\n  try{\r\n    const user = localStorage.getItem('user');\r\n    if(!user) return;\r\n\r\n    store.dispatch(tempSetUser(JSON.parse(user)));\r\n    store.dispatch(check());\r\n  }catch(e){\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <HelmetProvider>\r\n        <App />\r\n      </HelmetProvider>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}